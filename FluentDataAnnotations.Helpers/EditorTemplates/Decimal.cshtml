@using System.Web.Mvc
@using System.Web.Mvc.Html


@if (!ViewData.ModelMetadata.ShowForEdit)
{
    return;
}

@if (ViewData.ModelMetadata.IsReadOnly && !ViewData.ModelMetadata.AdditionalValues.ContainsKey("DisplayAsDisabledInput"))
{
    @Html.Encode(ViewData.TemplateInfo.FormattedModelValue)
    return;
}

@{
    var props = HtmlHelper.AnonymousObjectToHtmlAttributes(ViewData["htmlAttributes"]);
    if (ViewData.ModelMetadata.IsReadOnly)
    {
        props["disabled"] = "disabled";
    }
    
    object formattedValue;
    if (ViewData.TemplateInfo.FormattedModelValue == ViewData.ModelMetadata.Model)
    {
        formattedValue = string.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:0.00}", ViewData.ModelMetadata.Model);
    }
    else
    {
        formattedValue = ViewData.TemplateInfo.FormattedModelValue;
    }
    
    props["class"] = props.ContainsKey("class") ? props["class"] + " text-box single-line" : "text-box single-line";
    @Html.TextBox("", formattedValue, props)
}

